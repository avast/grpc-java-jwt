plugins {
    id 'com.github.sherter.google-java-format' version '0.9' apply false
    id 'com.google.protobuf' version '0.8.18' apply false
    id 'com.avast.gradle.docker-compose' version '0.15.1' apply false
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
}

allprojects {
    group 'com.avast.grpc.jwt'
    version = version == 'unspecified' ? 'DEVELOPER-SNAPSHOT' : version
}

ext {
    grpcVersion = '1.44.1'
    protobufVersion = '3.19.4'
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'
    apply plugin: 'com.github.sherter.google-java-format'

    sourceCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenCentral()
    }
    
    dependencies {
        testImplementation 'junit:junit:4.13.2'
        testImplementation 'org.mockito:mockito-core:4.3.1'
    }

    test {
        testLogging {
            events 'failed'
            exceptionFormat 'full'
        }
    }


    java {
        withJavadocJar()
        withSourcesJar()
    }

    afterEvaluate {
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from(components.java)
                    artifactId = archivesBaseName
                    pom {
                        name = 'gRPC Java JWT'
                        description = 'JWT based authentication for gRPC-Java'
                        url = 'https://github.com/avast/grpc-java-jwt'
                        licenses {
                            license {
                                name = 'The MIT License'
                                url = 'http://www.opensource.org/licenses/mit-license.php'
                            }
                        }
                        developers {
                            developer {
                                id = 'augi'
                                name = 'Michal August√Ωn'
                                email = 'augustyn.michal@gmail.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:git://github.com/avast/grpc-java-jwt.git'
                            developerConnection = 'scm:git:ssh://github.com/avast/grpc-java-jwt.git'
                            url = 'https://github.com/avast/grpc-java-jwt'
                        }
                    }
                }
            }
        }
    }

    signing {
        String base64Key = System.getenv('SIGNING_KEY')
        if (base64Key) {
            useInMemoryPgpKeys(new String(Base64.decoder.decode(base64Key)), System.getenv('SIGNING_PASSWORD'))
            sign publishing.publications
        }
    }
}
